name: Deploy Medusa to ECS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: medusa-repo 
  IMAGE_TAG: latest

jobs:
  build-and-deploy:
    name: Build & Push Docker Image to ECR and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Debug Secrets
      run: echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" && echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
      shell: bash

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG -f docker/Dockerfile .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
     
    - name: Push Docker image to ECR
      run: |
        docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.6
 
    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform

    - name: Terraform Validate  
      run: terraform validate
      working-directory: ./terraform

    - name: Terraform Format Check
      run: terraform fmt -check
      working-directory: ./terraform

    - name: Terraform plan
      run: terraform plan -no-color -input=false continue-on-error=true 
      working-directory: ./terraform
    
    - name: Show Terraform plan
      run: terraform show -json tfplan | jq '.'
      working-directory: ./terraform  
    
    - name: Set Terraform variables 
      run: |
        echo "TF_VAR_ecr_repository=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}" >> $GITHUB_ENV
        echo "TF_VAR_image_tag=${{ env.IMAGE_TAG }}" >> $GITHUB_ENV
      working-directory: ./terraform  
    
    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./terraform
